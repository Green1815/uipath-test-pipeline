<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_strConfigPath="Data\Config.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/credentials" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strConfigPath" Type="InArgument(x:String)" />
    <x:Property Name="out_dictConfig" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1202,11762</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="104">
      <x:String>CredentialManagement</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Activities.System.Utilities</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="172">
      <AssemblyReference>CredentialManagement</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InitAllSettings" sap:VirtualizedContainerService.HintSize="872,11697" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="si:FileInfo" Name="fileConfig" />
      <Variable x:TypeArguments="x:String" Name="strJSONConfig" />
      <Variable x:TypeArguments="njl:JObject" Name="jobjConfig" />
      <Variable x:TypeArguments="si:FileInfo" Name="fileJSON" />
      <Variable x:TypeArguments="x:String" Name="strConfigName" />
      <Variable x:TypeArguments="x:String" Name="strConfigFullName" />
      <Variable x:TypeArguments="x:String" Name="strCopyPath" />
      <Variable x:TypeArguments="x:String" Name="strJsonPath" />
      <Variable x:TypeArguments="x:String" Name="strRobotID" />
      <Variable x:TypeArguments="scg:List(njl:JObject)" Name="lstAssets" />
      <Variable x:TypeArguments="si:FileInfo" Name="fileAssets" />
      <Variable x:TypeArguments="x:Int32" Name="intChanges" />
      <Variable x:TypeArguments="njl:JObject" Name="jobjAssets" />
      <Variable x:TypeArguments="x:String" Name="strJSONResponse" />
      <Variable x:TypeArguments="x:String" Name="strRobotAssets" />
      <Variable x:TypeArguments="x:String" Name="strAssetPath" />
      <Variable x:TypeArguments="x:String" Name="strLanguage" />
      <Variable x:TypeArguments="x:String" Name="fakeVariable1" />
      <Variable x:TypeArguments="x:String" Name="fakeVariable2" />
      <Variable x:TypeArguments="x:String" Name="fakeVariable3" />
      <Variable x:TypeArguments="x:Int32" Name="intDivider" />
      <Variable x:TypeArguments="ui:CurrentJobInfo" Name="jobData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Define Variables" sap:VirtualizedContainerService.HintSize="810,2345" sap2010:WorkflowViewState.IdRef="Sequence_73">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="RobotID needed to get user specific asset values" DisplayName="Get RobotID and JobInfo" sap:VirtualizedContainerService.HintSize="534,1471" sap2010:WorkflowViewState.IdRef="Sequence_92">
        <Sequence.Variables>
          <Variable x:TypeArguments="njl:JObject" Name="jobjValues" />
          <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:OrchestratorHttpRequest ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request - RobotID" sap:VirtualizedContainerService.HintSize="472,242" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_9" JSONPayload="[String.Empty]" Method="GET" RelativeEndpoint="/odata/Users/UiPath.Server.Configuration.OData.GetCurrentUser" Result="[strJSONResponse]" StatusCode="[intStatusCode]" />
        <If Condition="[intStatusCode &lt;&gt; 200]" DisplayName="If - RobotID Request not successful" sap:VirtualizedContainerService.HintSize="472,411" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,229" sap2010:WorkflowViewState.IdRef="Sequence_93">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - RobotID request statuscode" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Warn" Message="[&quot;RobotID API request failed with statuscode: &quot; + intStatusCode.ToString]" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_94" />
          </If.Else>
        </If>
        <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize JSON Current User" sap:VirtualizedContainerService.HintSize="472,124" sap2010:WorkflowViewState.IdRef="Assign_62">
          <Assign.To>
            <OutArgument x:TypeArguments="njl:JObject">[jobjValues]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strJSONResponse)]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="472,367" sap2010:WorkflowViewState.IdRef="TryCatch_3">
          <TryCatch.Try>
            <Assign sap2010:Annotation.AnnotationText="Directly assign:&#xA;- RobotProvision&#xA;   -RobotId" DisplayName="Assign strRobotID - Unattended" sap:VirtualizedContainerService.HintSize="434,139" sap2010:WorkflowViewState.IdRef="Assign_63">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strRobotID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[jobjValues("UnattendedRobot")("RobotId").ToString]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="496,382" sap2010:WorkflowViewState.IdRef="Sequence_95">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Warn" Message="[&quot;Could not retrieve Unattended RobotID, trying for Attended&quot;]" />
                  <Assign sap2010:Annotation.AnnotationText="Directly assign:&#xA;- RobotProvision&#xA;   -RobotId" DisplayName="Assign strRobotID - Attended" sap:VirtualizedContainerService.HintSize="434,139" sap2010:WorkflowViewState.IdRef="Assign_64">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strRobotID]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[jobjValues("RobotProvision")("RobotId").ToString]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <ui:GetCurrentJobInfo DisplayName="Get Current Job Info" sap:VirtualizedContainerService.HintSize="472,25" sap2010:WorkflowViewState.IdRef="GetCurrentJobInfo_1" Result="[jobData]" />
      </Sequence>
      <ui:MultipleAssign sap2010:Annotation.AnnotationText="fileConfig: To get info about the config&#xA;strConfigName: Needed to create the new JSON and reading the json&#xA;strConfigFullName: Access to full name is required for conversion&#xA;&#xA;out_dictConfig: Define config of string string&#xA;out_dictPassword: Define config of string securestring&#xA;&#xA;strCopyPath:&#xA;Generate a copy path based on orginal path and adding temp to filename&#xA;&#xA;strJsonPath: Used in gathering the file info and creating a new JSON file&#xA;fileJSON: File info about config.json&#xA;&#xA;lstAssets: List of all assets&#xA;strAssetPath: File where asset values are saved - generate path based on config location&#xA;fileAssets: File info about asset file&#xA;&#xA;intDivider: How many assets are checked per API call for changes" DisplayName="Define all needed variables" sap:VirtualizedContainerService.HintSize="534,723" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_59">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="si:FileInfo">[fileConfig]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(in_strConfigPath)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strConfigName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[fileConfig.Name.Replace(fileConfig.Extension,"")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_61">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strConfigFullName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[fileConfig.FullName]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_62">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_dictConfig]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(of string,string)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_64">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strCopyPath]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("{0}-temp{1}",strConfigFullName.Replace(fileConfig.Extension,""),fileConfig.Extension)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_65">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strJsonPath]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(fileConfig.Directory.ToString,String.Format("{0}.json",strConfigName))]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_66">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="si:FileInfo">[fileJSON]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="si:FileInfo">[new FileInfo(strJsonPath)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_68">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:List(njl:JObject)">[lstAssets]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:List(njl:JObject)">[new List(of JObject)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_69">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strAssetPath]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(fileConfig.Directory.ToString,"Assets.json")]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_70">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="si:FileInfo">[fileAssets]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="si:FileInfo">[new FileInfo(strAssetPath)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_77">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[intDivider]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">15</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="API call to check if assets have changed" sap:VirtualizedContainerService.HintSize="810,81" sap2010:WorkflowViewState.IdRef="Sequence_75">
      <Sequence.Variables>
        <Variable x:TypeArguments="njl:JObject" Name="jobjAssetCheck" />
        <Variable x:TypeArguments="s:String[]" Name="arrAssets" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[fileAssets.Exists]" DisplayName="if asset json exist (Check if any value has changed in Orch: make new Asset list by setting intChanges)" sap:VirtualizedContainerService.HintSize="606,2405" sap2010:WorkflowViewState.IdRef="If_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Checking API call" sap:VirtualizedContainerService.HintSize="572,2110" sap2010:WorkflowViewState.IdRef="Sequence_89">
            <Sequence.Variables>
              <Variable x:TypeArguments="njl:JObject" Name="jobjAuditCheck" />
              <Variable x:TypeArguments="x:Int32" Name="intIterations" />
              <Variable x:TypeArguments="x:Int32" Name="intStartIndex" />
              <Variable x:TypeArguments="x:Int32" Name="intEndCount" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile File="{x:Null}" Content="[strRobotAssets]" ContinueOnError="True" DisplayName="Read list of assets for reference" FileName="[fileAssets.FullName]" sap:VirtualizedContainerService.HintSize="530,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ReadTextFile>
            <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize JSON Robot Assets File" sap:VirtualizedContainerService.HintSize="530,124" sap2010:WorkflowViewState.IdRef="Assign_54">
              <Assign.To>
                <OutArgument x:TypeArguments="njl:JObject">[jObjAssetCheck]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strRobotAssets)]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="Generate a array of string with all assets from the JSON.&#xA;&#xA;Will add ' ' between otherwise the API call doesn't work anymore" DisplayName="[LINQ] Assign arrAssets" sap:VirtualizedContainerService.HintSize="530,140" sap2010:WorkflowViewState.IdRef="Assign_44">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[arrAssets]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]" xml:space="preserve">[(From s In jObjAssetCheck("assets")
Let asset = String.Format("'{0}'",s("name"))
Select asset).ToArray]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="The API call can only check 15-20 assets at a time. So we will see how many iterations we need, since using a API call for each asset will take to long." DisplayName="Assign - intIterations" sap:VirtualizedContainerService.HintSize="530,139" sap2010:WorkflowViewState.IdRef="Assign_61">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intIterations]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[cInt(Math.Ceiling(arrAssets.Length / intDivider))]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:RepeatNumberOfTimesX sap2010:Annotation.AnnotationText="We do this because we can only do 15-20 asset per call." DisplayName="Repeat Number of Times based on intIterations" sap:VirtualizedContainerService.HintSize="530,1379" sap2010:WorkflowViewState.IdRef="RepeatNumberOfTimesX_1" NumberOfTimes="[intIterations]" StartAt="1">
              <ui:RepeatNumberOfTimesX.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,1192" sap2010:WorkflowViewState.IdRef="Sequence_91">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign sap2010:Annotation.AnnotationText="intStartIndex: Calculate the start index of the array for the API Call.&#xA;&#xA;CurrentItem * IntDivider - intDivider&#xA;Iteration 1 : 1 * 15 = 15 - 15 = 0&#xA;Iteration 2 : 2 * 15 = 30 - 15 = 15&#xA;&#xA;intEndCount&#xA;Check if current iteration is bigger then total length, if not then use the intDivider if so then subtract startindex from total to get the remaining." DisplayName="Multiple Assign intStartIndex &amp; intEndCount" sap:VirtualizedContainerService.HintSize="434,279" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_78">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[intStartIndex]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[(CurrentItem * intDivider) - intDivider]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_79">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[intEndCount]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[if(intStartIndex+intDivider &gt; arrAssets.Length,arrAssets.Length-intStartIndex,intDivider)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <ui:OrchestratorHttpRequest ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Check for updated assets that are used in the robot.&#xA;&#xA;A lot of inline code is used to make the robot faster.&#xA;&#xA;Using UTC time, that is the only time the orchestrator will listen to.&#xA;&#xA;Only return 1 result for checking - no more data is needed to determine whether there were changes" DisplayName="[API] Check Audit log " sap:VirtualizedContainerService.HintSize="434,389" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_8" JSONPayload="[String.Empty]" Method="GET" RelativeEndpoint="[&quot;/odata/AuditLogs?$filter=(&quot;+String.Format(&quot;DisplayName eq {0}&quot;,String.Join(&quot; or DisplayName eq &quot;,arrAssets,intStartIndex,intEndCount))+&quot;) AND Action eq 'Update' AND ExecutionTime gt &quot;+TimeZoneInfo.ConvertTimeToUtc(fileJSON.LastWriteTime).ToString(&quot;yyyy-MM-ddTHH:mm:ss.007Z&quot;)+&quot; &amp;$select=ExecutionTime&amp;$top=1&quot;]" Result="[strJSONResponse]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:OrchestratorHttpRequest>
                    <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize JSON Robot Assets Audit Log" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="Assign_55">
                      <Assign.To>
                        <OutArgument x:TypeArguments="njl:JObject">[jobjAuditCheck]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strJSONResponse)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="If intChanges is 1 or bigger then we need to rebuild our Config.&#xA;&#xA;We get not results if it is 0, so nothing changed.&#xA;&#xA;Also if Asset list is empty just ignore everything." DisplayName="Assign intChanges" sap:VirtualizedContainerService.HintSize="434,169" sap2010:WorkflowViewState.IdRef="Assign_52">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[intChanges]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[if(arrAssets.Length&gt;0,if(jobjAuditCheck.ContainsKey("value"),jobjAuditCheck("value").Count,1) + intChanges,0)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:RepeatNumberOfTimesX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:RepeatNumberOfTimesX>
          </Sequence>
        </If.Then>
        <If.Else>
          <Assign sap2010:Annotation.AnnotationText="If asset list doesn't exist, build an new one" DisplayName="Assign intChanges -1" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_51">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[intChanges]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">1</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Get Config and Assets" sap:VirtualizedContainerService.HintSize="810,6304" sap2010:WorkflowViewState.IdRef="Sequence_84">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[(fileConfig.LastWriteTime &gt; fileJSON.LastWriteTime) or intChanges &gt; 0]" DisplayName="If config file has been changed compared to JSON (Generate new JSON)" sap:VirtualizedContainerService.HintSize="748,6193" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="714,5782" sap2010:WorkflowViewState.IdRef="Sequence_82">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Asset.json&#xA;Config.json" DisplayName="Delete old JSON files" sap:VirtualizedContainerService.HintSize="672,353" sap2010:WorkflowViewState.IdRef="Sequence_76">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="This is needed for the invoke code to work, Uipath has a strange way of including assembly references" Name="fakeVariableEngine" />
                <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="This is needed for the invoke code to work, Uipath has a strange way of including assembly references" Name="fakeVariableVersion" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:DeleteFileX DisplayName="Delete - Old Config file" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_5" Path="[strJsonPath]" />
              <ui:DeleteFileX DisplayName="Delete - Old Asset file" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="DeleteFileX_6" Path="[strAssetPath]" />
            </Sequence>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="672,141" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="[LogLevel.Info]" Message="[&quot;Generate new Config&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <Sequence DisplayName="Excel To Json" sap:VirtualizedContainerService.HintSize="672,1296" sap2010:WorkflowViewState.IdRef="Sequence_99">
              <Sequence.Variables>
                <Variable x:TypeArguments="njl:JObject" Name="jobjConfigTemp" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - jobjConfigTemp" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_65">
                <Assign.To>
                  <OutArgument x:TypeArguments="njl:JObject">[jobjConfigTemp]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="njl:JObject">[New JObject()]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Config Sheet" sap:VirtualizedContainerService.HintSize="510,890" sap2010:WorkflowViewState.IdRef="ForEach`1_74" Values="[{&quot;Settings&quot;, &quot;Assets&quot;, &quot;Credentials&quot;, &quot;LogMessages&quot;, &quot;ReporterMail&quot;}]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="currentSheet" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,704" sap2010:WorkflowViewState.IdRef="Sequence_100">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="dtTest" />
                        <Variable x:TypeArguments="njl:JArray" Name="jobjArray" />
                        <Variable x:TypeArguments="sd:DataTable" Name="dtReadConfig" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReadRange AddHeaders="True" DataTable="[dtReadConfig]" DisplayName="Read Range - dtReadConfig" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[currentSheet]" WorkbookPath="[in_strConfigPath]">
                        <ui:ReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ReadRange.Range>
                      </ui:ReadRange>
                      <ui:FilterDataTable DataTable="[dtReadConfig]" DisplayName="Filter Data Table - Remove empty rows" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtReadConfig]" SelectColumnsMode="Keep">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="NOTEMPTY">
                              <ui:FilterOperationArgument.Column>
                                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                              </ui:FilterOperationArgument.Column>
                            </ui:FilterOperationArgument>
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <x:Null />
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                      </ui:FilterDataTable>
                      <Assign DisplayName="Assign - jObjectArray" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_66">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JArray">[jobjArray]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JArray">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JArray)(JsonConvert.SerializeObject(dtReadConfig))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="io_jobjConfigTemp(in_currentSheet) = in_jobjArray&#xA;" DisplayName="Invoke Code - Add Sheet to JObject" sap:VirtualizedContainerService.HintSize="434,165" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="njl:JArray" x:Key="in_jobjArray">[jobjArray]</InArgument>
                          <InOutArgument x:TypeArguments="njl:JObject" x:Key="io_jobjConfigTemp">[jobjConfigTemp]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_currentSheet">[currentSheet]</InArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File - Config.json" FileName="[strJsonPath]" sap:VirtualizedContainerService.HintSize="510,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_6" Text="[jobjConfigTemp.ToString(Newtonsoft.Json.Formatting.Indented)]" />
            </Sequence>
            <Sequence DisplayName="Read and clean data" sap:VirtualizedContainerService.HintSize="672,3784" sap2010:WorkflowViewState.IdRef="Sequence_81">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadTextFile File="{x:Null}" Content="[strJSONConfig]" DisplayName="Read JSON config" FileName="[fileJSON.FullName]" sap:VirtualizedContainerService.HintSize="610,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadTextFile>
              <Assign sap2010:Annotation.AnnotationText="Cleaing format to be consistant JSON format&#xA;&#xA;All single &quot;\&quot; to &quot;\\\\&quot;&#xA;&#xA;Use regex to clean all empty spaces from the txt before deserializing" DisplayName="Assign - strJSONConfig clean" sap:VirtualizedContainerService.HintSize="610,169" sap2010:WorkflowViewState.IdRef="Assign_69">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strJSONConfig]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(System.Text.RegularExpressions.Regex.Replace(System.Text.RegularExpressions.Regex.Replace(strJSONConfig, "(\\)(?!"")", "\\\\"), "(?:    {    },)", ""), "(?:    {    })", "")]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize JSON strJSONConfig" sap:VirtualizedContainerService.HintSize="610,124" sap2010:WorkflowViewState.IdRef="Assign_56">
                <Assign.To>
                  <OutArgument x:TypeArguments="njl:JObject">[jObjConfig]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strJSONConfig)]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For Each -  Asset do an API Call and cache" sap:VirtualizedContainerService.HintSize="610,1539" sap2010:WorkflowViewState.IdRef="ForEach`1_69" Values="[jObjConfig(&quot;Assets&quot;)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="njl:JObject">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="njl:JObject" Name="asset" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="576,1353" sap2010:WorkflowViewState.IdRef="Sequence_78">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strConfigAssetName" />
                        <Variable x:TypeArguments="x:String" Name="strConfigAssetValue" />
                        <Variable x:TypeArguments="x:String" Name="strConfigAssetFolder" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Define all possible JSON variables" sap:VirtualizedContainerService.HintSize="534,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_71">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strConfigAssetName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(asset.ContainsKey("Name"),asset("Name").ToString,"")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_72">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strConfigAssetValue]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(asset.ContainsKey("Value"),asset("Value").ToString,"")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_73">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strConfigAssetFolder]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(asset.ContainsKey("Folder"),asset("Folder").ToString,"")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MultipleAssign>
                      <Sequence DisplayName="API for Asset" sap:VirtualizedContainerService.HintSize="534,1047" sap2010:WorkflowViewState.IdRef="Sequence_77">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:OrchestratorHttpRequest ResponseHeaders="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Search for Asset value along with the robotID" DisplayName="Orchestrator HTTP Request" FolderPath="[strConfigAssetFolder]" sap:VirtualizedContainerService.HintSize="472,273" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_6" JSONPayload="[String.Empty]" Method="GET" RelativeEndpoint="[&quot;/odata/Assets/UiPath.Server.Configuration.OData.GetRobotAssetByRobotId(robotId=&quot;+strRobotID+&quot;,assetName='&quot;+strConfigAssetValue+&quot;')&quot;]" Result="[strJSONResponse]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:OrchestratorHttpRequest>
                        <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize JSON Asset" sap:VirtualizedContainerService.HintSize="472,124" sap2010:WorkflowViewState.IdRef="Assign_57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="njl:JObject">[jobjAssets]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strJSONResponse)]</InArgument>
                          </Assign.Value>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Assign>
                        <TryCatch sap2010:Annotation.AnnotationText="On premise orchestrators dont have a general Value in the API Call, so we assume that we are going to use the StringValue." DisplayName="For old orchestrators " sap:VirtualizedContainerService.HintSize="472,352" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Assign DisplayName="Assign to Json object for caching" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_47">
                              <Assign.To>
                                <OutArgument x:TypeArguments="njl:JToken">[asset("Value")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="njl:JToken">[jobjAssets("Value").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="472,310" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                  <TryCatch.Try>
                                    <Assign DisplayName="Assign to Json object for caching" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_59">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="njl:JToken">[asset("Value")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="njl:JToken">[jobjAssets("StringValue").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap:VirtualizedContainerService.HintSize="496,405" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap2010:Annotation.AnnotationText="Otherwise it will use the Orchestrator name." DisplayName="Assign to asset empty" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_60">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="njl:JToken">[asset("Value")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="njl:JToken">[""]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Warn" Message="[String.Format(&quot;Asset name '{0}' with value '{1}' from folder '{2}' could not be found.&quot;,strConfigAssetName,strConfigAssetValue,strConfigAssetFolder)]" />
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <AddToCollection x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="Building an JObject Assets List" Collection="[lstAssets]" DisplayName="Add To Collection lstAssets" sap:VirtualizedContainerService.HintSize="472,67" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[jObjConfig.FromObject(&#xA;   New With {&#xA;  key .name = strConfigAssetValue,&#xA;  key .folder = strConfigAssetFolder&#xA;    }&#xA;)]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </AddToCollection>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For each - Credential in Config" sap:VirtualizedContainerService.HintSize="610,1224" sap2010:WorkflowViewState.IdRef="ForEach`1_70" Values="[jObjConfig(&quot;Credentials&quot;)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="njl:JObject">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="njl:JObject" Name="cred" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="538,1038" sap2010:WorkflowViewState.IdRef="Sequence_80">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strConfigAssetName" />
                        <Variable x:TypeArguments="x:String" Name="strConfigAssetValue" />
                        <Variable x:TypeArguments="x:String" Name="strConfigAssetFolder" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Define all possible JSON variables" sap:VirtualizedContainerService.HintSize="496,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_74">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strConfigAssetName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(cred.ContainsKey("Name"),cred("Name").ToString,"")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_75">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strConfigAssetValue]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(cred.ContainsKey("Value"),cred("Value").ToString,"")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_76">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strConfigAssetFolder]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[if(cred.ContainsKey("Folder"),cred("Folder").ToString,"")]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <Sequence DisplayName="API for Asset" sap:VirtualizedContainerService.HintSize="496,732" sap2010:WorkflowViewState.IdRef="Sequence_79">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strUsername" />
                          <Variable x:TypeArguments="ss:SecureString" Name="ssPassword" />
                          <Variable x:TypeArguments="x:String" Name="strWindowsCredentialManagerName" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[strConfigAssetValue]" CacheStrategy="None" DisplayName="Get Credential" FolderPath="[strConfigAssetFolder]" sap:VirtualizedContainerService.HintSize="434,143" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[ssPassword]" Username="[strUsername]" />
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_72">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strWindowsCredentialManagerName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[String.Format("{0}_{1}", jobData.ProcessName , cred("Name").ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <p:AddCredential Password="{x:Null}" sap2010:Annotation.AnnotationText="Windows credentials are 300 times faster then Get credential.&#xA;&#xA;CredentialType: Generic&#xA;PersistanceType: Enterprise" CredentialType="Generic" DisplayName="Store in Windows Credential Manager" sap:VirtualizedContainerService.HintSize="434,220" sap2010:WorkflowViewState.IdRef="AddCredential_2" PasswordSecureString="[ssPassword]" PersistanceType="Enterprise" Target="[strWindowsCredentialManagerName]" Username="[strUsername]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </p:AddCredential>
                        <AddToCollection x:TypeArguments="njl:JObject" sap2010:Annotation.AnnotationText="Building an JObject" Collection="[lstAssets]" DisplayName="Add To Collection lstAssets" sap:VirtualizedContainerService.HintSize="434,56" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[jObjConfig.FromObject(&#xA;   New With {&#xA;  key .name = strConfigAssetValue,&#xA;  key .folder = strConfigAssetFolder&#xA;    }&#xA;)]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </AddToCollection>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <ui:WriteTextFile File="{x:Null}" DisplayName="Write asset list back for future API checking" FileName="[fileAssets.FullName]" sap:VirtualizedContainerService.HintSize="610,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[JObject.FromObject(&#xA;   New With {&#xA;        key .assets = JArray.FromObject(lstAssets)&#xA;    }&#xA;).ToString]" />
              <ui:WriteTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="Back with all cached items" DisplayName="Write minified Json Config " FileName="[fileJSON.FullName]" sap:VirtualizedContainerService.HintSize="610,164" sap2010:WorkflowViewState.IdRef="WriteTextFile_5" Text="[Newtonsoft.Json.JsonConvert.SerializeObject(jObjConfig)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:WriteTextFile>
            </Sequence>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="376,229" sap2010:WorkflowViewState.IdRef="Sequence_83">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[String.Format(&quot;No need to generate new Config&quot;)]" />
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Set Config - JSON to Dictionary" sap:VirtualizedContainerService.HintSize="810,807" sap2010:WorkflowViewState.IdRef="Sequence_86">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadTextFile File="{x:Null}" Content="[strJSONConfig]" DisplayName="Read JSON config" FileName="[fileJSON.FullName]" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ReadTextFile_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadTextFile>
      <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize strJSONConfig" sap:VirtualizedContainerService.HintSize="434,124" sap2010:WorkflowViewState.IdRef="Assign_58">
        <Assign.To>
          <OutArgument x:TypeArguments="njl:JObject">[jObjConfig]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strJSONConfig)]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Assign sap2010:Annotation.AnnotationText="Search for ReportLanguage, only 1 match possible and get first match.&#xA;Since the JSON is already minised we cant just directly go to the ReportLanguage." DisplayName="[LINQ] Assign strLanguage" sap:VirtualizedContainerService.HintSize="434,140" sap2010:WorkflowViewState.IdRef="Assign_48">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strLanguage]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[(From s In jObjConfig.Values
From i In jObjConfig(s.Path).Cast( Of Newtonsoft.Json.Linq.JObject)
Where i("Name").ToString.Equals("ReportLanguage")
Let strlang = If(i.ContainsKey("Value"),i("Value").ToString,"")
Select strlang)(0).ToString]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <Assign sap2010:Annotation.AnnotationText="Bit hacky methode to loop through the sheets.&#xA;jObjConfig.Values gives us a list of of all JArrays.&#xA;&#xA;From there we can see which is the parent of those JArrays.&#xA;&#xA;We cast those parents back to a Jobject so we can detect the different sheets. We define the key as the name in the config and the value as the value in the config.&#xA;&#xA;For the reportermail values we use strLanguage to see which language we need to get." DisplayName="[LINQ] Assign out_dictConfig" sap:VirtualizedContainerService.HintSize="434,260" sap2010:WorkflowViewState.IdRef="Assign_49">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_dictConfig]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" xml:space="preserve">[((From s In jObjConfig.Values
From i In jObjConfig(s.Path).Cast( Of Newtonsoft.Json.Linq.JObject)
Let dictKey = If(i.ContainsKey("Name"),i("Name").ToString,"")
Let dictValue = If(i.ContainsKey("Value"),i("Value").ToString,If(i.ContainsKey(strLanguage),i(strLanguage).ToString,"")).Replace("\\","\")
Select t = Tuple.Create(dictKey,dictValue)).ToDictionary(Function (x) x.Item1,Function (x) x.Item2))]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Set passwords to Dictionary" sap:VirtualizedContainerService.HintSize="810,1889" sap2010:WorkflowViewState.IdRef="Sequence_87">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="We don't have a VB.NET methode for getting credentials from the credential manager.&#xA;&#xA;In C# this is possible so in the future we will implement this." DisplayName="For each - Credential" sap:VirtualizedContainerService.HintSize="510,1778" sap2010:WorkflowViewState.IdRef="ForEach`1_73" Values="[jObjConfig(&quot;Credentials&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="njl:JObject">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="njl:JObject" Name="cred" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1535" sap2010:WorkflowViewState.IdRef="Sequence_88">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strUsernameCM" />
                <Variable x:TypeArguments="ss:SecureString" Name="ssPasswordCM" />
                <Variable x:TypeArguments="x:Boolean" Name="isCredentialFound" />
                <Variable x:TypeArguments="x:String" Name="strWindowsCredentialManagerName" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_70">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strWindowsCredentialManagerName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Format("{0}_{1}", jobData.ProcessName , cred("Name").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <p:GetSecureCredential CredentialType="Generic" DisplayName="Get Secure Credentials" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="GetSecureCredential_1" Password="[ssPasswordCM]" PersistanceType="Enterprise" Result="[isCredentialFound]" Target="[strWindowsCredentialManagerName]" Username="[strUsernameCM]" />
              <If Condition="[isCredentialFound]" sap:VirtualizedContainerService.HintSize="434,1083" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,229" sap2010:WorkflowViewState.IdRef="Sequence_101">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info" Message="[strWindowsCredentialManagerName+&quot; already set&quot;]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,672" sap2010:WorkflowViewState.IdRef="Sequence_103">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="[String.Format(&quot;Set {0}&quot;, strWindowsCredentialManagerName)]" />
                    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[cred(&quot;Value&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" FolderPath="[cred(&quot;Folder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[ssPasswordCM]" Username="[strUsernameCM]" />
                    <p:AddCredential Password="{x:Null}" sap2010:Annotation.AnnotationText="Windows credentials are 300 times faster then Get credential.&#xA;&#xA;CredentialType: Generic&#xA;PersistanceType: Enterprise" CredentialType="Generic" DisplayName="Store in Windows Credential Manager" sap:VirtualizedContainerService.HintSize="334,220" sap2010:WorkflowViewState.IdRef="AddCredential_3" PasswordSecureString="[ssPasswordCM]" PersistanceType="Enterprise" Target="[strWindowsCredentialManagerName]" Username="[strUsernameCM]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:AddCredential>
                  </Sequence>
                </If.Else>
              </If>
              <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_71">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_dictConfig(cred("Name").ToString)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strWindowsCredentialManagerName]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>