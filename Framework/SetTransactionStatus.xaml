<Activity mc:Ignorable="sap sap2010" x:Class="SetTransactionStatus" this:SetTransactionStatus.in_TransactionItem="[Nothing]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SystemError" Type="InArgument(s:Exception)" />
    <x:Property Name="in_BusinessRuleException" Type="InArgument(ui:BusinessRuleException)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_tsProcessTime" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="in_dictConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="io_intTransactionNumber" Type="InOutArgument(x:Int32)" />
    <x:Property Name="in_strTransactionID" Type="InArgument(x:String)" />
    <x:Property Name="in_strExceptionScreenshotPath" Type="InArgument(x:String)" />
    <x:Property Name="in_dictProgress" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_strOrchestratorFolderName" Type="InArgument(x:String)" />
  </x:Members>
  <this:SetTransactionStatus.in_strExceptionScreenshotPath>
    <InArgument x:TypeArguments="x:String" />
  </this:SetTransactionStatus.in_strExceptionScreenshotPath>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2593,1353</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SetTransactionStatus_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow sets the TransactionStatus and Logs that status and details in extra Logging Fields. &#xA;The flowchart branches out into the three possible Transaction Statuses: Success, Business Exception and Application Exception. &#xA;&#xA;Each branch analyzes the type of content of TransactionItem. If its not empty and is a QueueItem, then it means we are using a Orchestrator queue, so we must call the “Set Transaction Status” activity to inform Orchestrator about the outcome of our transaction. If TransactionItem is not a QueueItem, we can skip passing it and the “Set Transaction Status” activity will not be triggered. &#xA;&#xA;After that we log the result of the transaction within custom log fields to make it easier to search for within results. &#xA;&#xA;A Retry Scope is added to prevent transactions staying In Progress when the activity times out. " DisplayName="SetTransactionStatus" sap:VirtualizedContainerService.HintSize="778,1288" sap2010:WorkflowViewState.IdRef="Sequence_11">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:RetryScope DisplayName="Retry Scope - SetTransactionStatus" sap:VirtualizedContainerService.HintSize="716,1004" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:10">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Flowchart DisplayName="SetTransactionStatus" sap:VirtualizedContainerService.HintSize="674,820" sap2010:WorkflowViewState.IdRef="Flowchart_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <x:Double x:Key="Width">640</x:Double>
                <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,110</av:PointCollection>
                <x:Double x:Key="Height">773.6</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID5</x:Reference>
            </Flowchart.StartNode>
            <FlowDecision x:Name="__ReferenceID4" Condition="[in_BusinessRuleException is Nothing and in_SystemError is Nothing]" DisplayName="Success" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">264.8,276.4</av:Point>
                  <av:Size x:Key="ShapeSize">70,87</av:Size>
                  <av:PointCollection x:Key="FalseConnector">334.8,319.9 429.5,319.9 429.5,406.4</av:PointCollection>
                  <av:PointCollection x:Key="TrueConnector">264.8,319.9 110,319.9 110,611.6</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">10,611.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,162</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap2010:Annotation.AnnotationText="This Transition is picked up if we have no exception, of any type.&#xA;" DisplayName="Success" sap:VirtualizedContainerService.HintSize="200,162" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddLogFields DisplayName="Add Transaction log fields" sap:VirtualizedContainerService.HintSize="416,32" sap2010:WorkflowViewState.IdRef="AddLogFields_4">
                      <ui:AddLogFields.Fields>
                        <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">Success</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[io_intTransactionNumber.ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[in_strTransactionID]</InArgument>
                      </ui:AddLogFields.Fields>
                    </ui:AddLogFields>
                    <ui:LogMessage DisplayName="Log Message - Success" sap:VirtualizedContainerService.HintSize="416,101" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[in_dictConfig(&quot;TransactionSuccessful&quot;)]" />
                    <ui:RemoveLogFields DisplayName="Remove Transaction log fields" sap:VirtualizedContainerService.HintSize="416,32" sap2010:WorkflowViewState.IdRef="RemoveLogFields_8">
                      <ui:RemoveLogFields.Fields>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                          <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                          <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                        </scg:List>
                      </ui:RemoveLogFields.Fields>
                    </ui:RemoveLogFields>
                    <If Condition="[in_TransactionItem isNot Nothing AndAlso (in_TransactionItem.GetType is GetType(Uipath.Core.QueueItem))]" DisplayName="If TransactionItem is a QueueItem" sap:VirtualizedContainerService.HintSize="416,383" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Successful" DisplayName="Set transaction status" ErrorType="Application" FolderPath="[in_strOrchestratorFolderName]" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_6" Status="Successful" TransactionItem="[in_TransactionItem]">
                          <ui:SetTransactionStatus.Analytics>
                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="Process Time [sec]">[in_tsProcessTime]</InArgument>
                          </ui:SetTransactionStatus.Analytics>
                          <ui:SetTransactionStatus.Output>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                          </ui:SetTransactionStatus.Output>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SetTransactionStatus>
                      </If.Then>
                    </If>
                    <Assign DisplayName="Assign - TransactionNumber" sap:VirtualizedContainerService.HintSize="416,70" sap2010:WorkflowViewState.IdRef="Assign_26">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[io_intTransactionNumber]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[io_intTransactionNumber+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowDecision x:Name="__ReferenceID0" Condition="[in_BusinessRuleException isnot Nothing]" DisplayName="BusinessException" sap:VirtualizedContainerService.HintSize="103,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">378,406.4</av:Point>
                      <av:Size x:Key="ShapeSize">103,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">378,449.9 320,449.9 320,608.5</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">481,449.9 540,449.9 540,611.6</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">220,608.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,147</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap2010:Annotation.AnnotationText="This transition is executed if a business rule exception occurred." DisplayName="Handle Business Rule Exception" sap:VirtualizedContainerService.HintSize="200,147" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddLogFields DisplayName="Add Transaction log fields" sap:VirtualizedContainerService.HintSize="416,32" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                          <ui:AddLogFields.Fields>
                            <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">BusinessException</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[io_intTransactionNumber.ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[in_strTransactionID]</InArgument>
                          </ui:AddLogFields.Fields>
                        </ui:AddLogFields>
                        <ui:LogMessage DisplayName="Log Message - BRE" sap:VirtualizedContainerService.HintSize="416,101" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Warn" Message="[String.Format(&quot;{0} {1}&quot;,in_dictConfig(&quot;TransactionBRE&quot;), in_BusinessRuleException.Message)]" />
                        <ui:RemoveLogFields DisplayName="Remove Transaction log fields" sap:VirtualizedContainerService.HintSize="416,32" sap2010:WorkflowViewState.IdRef="RemoveLogFields_9">
                          <ui:RemoveLogFields.Fields>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                              <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                            </scg:List>
                          </ui:RemoveLogFields.Fields>
                        </ui:RemoveLogFields>
                        <If Condition="[in_TransactionItem isNot Nothing]" DisplayName="If TransactionItem is a QueueItem" sap:VirtualizedContainerService.HintSize="416,383" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Then>
                            <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Business exception" Details="[in_strExceptionScreenshotPath]" DisplayName="Set transaction status" ErrorType="Business" FolderPath="[in_strOrchestratorFolderName]" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_7" Reason="[in_BusinessRuleException.Message]" Status="Failed" TransactionItem="[in_TransactionItem]">
                              <ui:SetTransactionStatus.Analytics>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                              </ui:SetTransactionStatus.Analytics>
                              <ui:SetTransactionStatus.Output>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                              </ui:SetTransactionStatus.Output>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SetTransactionStatus>
                          </If.Then>
                        </If>
                        <Assign DisplayName="Assign - TransactionNumber" sap:VirtualizedContainerService.HintSize="416,70" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[io_intTransactionNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[io_intTransactionNumber+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">440,611.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,132</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap2010:Annotation.AnnotationText="This transition is executed if a system error occurred." DisplayName="Handle System Error" sap:VirtualizedContainerService.HintSize="598,1817" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddLogFields DisplayName="Add Transaction log fields" sap:VirtualizedContainerService.HintSize="536,32" sap2010:WorkflowViewState.IdRef="AddLogFields_6">
                          <ui:AddLogFields.Fields>
                            <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">ApplicationException</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[io_intTransactionNumber.ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[in_strTransactionID]</InArgument>
                          </ui:AddLogFields.Fields>
                        </ui:AddLogFields>
                        <ui:LogMessage DisplayName="Log Message - Error" sap:VirtualizedContainerService.HintSize="536,101" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Error" Message="[String.Format(&quot;{0} {1} at source {2}&quot;,in_dictConfig(&quot;TransactionFailed&quot;),in_SystemError.Message, in_SystemError.Source)]" />
                        <ui:RemoveLogFields DisplayName="Remove Transaction log fields" sap:VirtualizedContainerService.HintSize="536,32" sap2010:WorkflowViewState.IdRef="RemoveLogFields_10">
                          <ui:RemoveLogFields.Fields>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                              <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                              <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                            </scg:List>
                          </ui:RemoveLogFields.Fields>
                        </ui:RemoveLogFields>
                        <If Condition="[in_TransactionItem isNot Nothing]" DisplayName="If TransactionItem is not Nothing" sap:VirtualizedContainerService.HintSize="536,383" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Then>
                            <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="System exception" Details="[in_strExceptionScreenshotPath]" DisplayName="Set transaction status" ErrorType="Application" FolderPath="[in_strOrchestratorFolderName]" sap:VirtualizedContainerService.HintSize="334,120" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_8" Reason="[in_SystemError.Message]" Status="Failed" TransactionItem="[in_TransactionItem]">
                              <ui:SetTransactionStatus.Analytics>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                              </ui:SetTransactionStatus.Analytics>
                              <ui:SetTransactionStatus.Output>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                              </ui:SetTransactionStatus.Output>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SetTransactionStatus>
                          </If.Then>
                        </If>
                        <Assign DisplayName="Increment TransactionNumber" sap:VirtualizedContainerService.HintSize="536,70" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[io_intTransactionNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[io_intTransactionNumber+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <TryCatch DisplayName="Try catch CloseAllApplications" sap:VirtualizedContainerService.HintSize="536,846" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework/CloseAllApplications.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strClosingMessage">[in_dictConfig("CloseApplications")]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="502,674" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,605" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log message - Close Fail" sap:VirtualizedContainerService.HintSize="434,101" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Warn" Message="[in_dictConfig(&quot;CloseApplicationsFailed&quot;).ToString+&quot; &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                  <TryCatch DisplayName="Try catch KillAllProcesses" sap:VirtualizedContainerService.HintSize="434,342" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework/KillAllProcesses.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_strKillMessage">[in_dictConfig("KillProcesses")]</InArgument>
                                          <InArgument x:TypeArguments="s:String[]" x:Key="in_arrProcessesToKill">[in_dictConfig("ProcessesToKill").Split(","c)]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,170" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:LogMessage DisplayName="Log message - Kill Fail" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Warn" Message="[String.Format(&quot;{0} {1} at Source: {2}&quot;,in_dictConfig(&quot;KillApplicationsFailed&quot;),exception.Message,exception.Source)]" />
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowDecision.False>
            </FlowDecision>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,110</av:Point>
                  <av:Size x:Key="ShapeSize">200,148</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,258 299.8,258 299.8,276.4</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:SetTransactionProgress TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Progress stored in dictProgress is saved in TransactionItem.Progress after serializing it to a JSON String" DisplayName="Set Progress" FolderPath="[in_strOrchestratorFolderName]" sap:VirtualizedContainerService.HintSize="200,148" sap2010:WorkflowViewState.IdRef="SetTransactionProgress_3" Progress="[Newtonsoft.Json.JsonConvert.SerializeObject(in_dictProgress)]" TransactionItem="[in_TransactionItem]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SetTransactionProgress>
              <FlowStep.Next>
                <x:Reference>__ReferenceID4</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </Flowchart>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
  </Sequence>
</Activity>