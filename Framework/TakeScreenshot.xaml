<Activity mc:Ignorable="sap sap2010" x:Class="TakeScreenshot" this:TakeScreenshot.in_TransactionItem="[Nothing]" this:TakeScreenshot.in_strFolder="Data\Exception_Screenshots" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_strLogMessage" Type="InArgument(x:String)" />
    <x:Property Name="in_strFolder" Type="InArgument(x:String)" />
    <x:Property Name="io_strFilePath" Type="InOutArgument(x:String)" />
    <x:Property Name="in_Exception" Type="InArgument(s:Exception)" />
    <x:Property Name="in_intMaxNoRetries" Type="InArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2556,2040.666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TakeScreenshot_2</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Usage: Set in_Folder to the folder Name where you want to save the screenshot. Alternatively, supply the full path including filename in io_FilePath. Description: This workflow captures a screenshot and logs it's name and location. It then saves it. If io_FilePath is empty, it will try to save the picture in in_Folder.  It uses .png extension." DisplayName="TakeScreenshot" sap:VirtualizedContainerService.HintSize="976,1976" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:Image" Name="screenshot" />
      <Variable x:TypeArguments="si:FileInfo" Name="screenshotFileInfo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take screenshot" sap:VirtualizedContainerService.HintSize="914,96" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[screenshot]">
      <ui:TakeScreenshot.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="a76aa4e1-05fa-4bdc-b714-1f6b503b287f" WaitForReady="INTERACTIVE">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
        </ui:Target>
      </ui:TakeScreenshot.Target>
    </ui:TakeScreenshot>
    <If Condition="[String.IsNullOrEmpty(io_strFilePath) AND in_TransactionItem IsNot Nothing]" DisplayName="If no file path" sap:VirtualizedContainerService.HintSize="914,834.6666666666666" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Switch x:TypeArguments="x:String" DisplayName="Switch - Type" Expression="[in_Exception.GetType().Name]" sap:VirtualizedContainerService.HintSize="496.6666666666667,565.3333333333334" sap2010:WorkflowViewState.IdRef="Switch`1_1">
          <Switch.Default>
            <If Condition="[in_TransactionItem.RetryNo &lt; in_intMaxNoRetries]" DisplayName="If - Item has retries left" sap:VirtualizedContainerService.HintSize="344.6666666666667,369.3333333333333" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Assign DisplayName="Make file path, append Retried" sap:VirtualizedContainerService.HintSize="262,72" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[io_strFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.Combine(in_strFolder, "ExceptionScreenshot_"+Now.ToString("yyMMdd.HHmmss")+"_Retried.png")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Make file path, append Failed" sap:VirtualizedContainerService.HintSize="262,72" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[io_strFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.Combine(in_strFolder, "ExceptionScreenshot_"+Now.ToString("yyMMdd.HHmmss")+"_Failed.png")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Switch.Default>
          <Assign x:Key="BusinessRuleException" DisplayName="Make file path, append Failed" sap:VirtualizedContainerService.HintSize="262,72" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[io_strFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Path.Combine(in_strFolder, "ExceptionScreenshot_"+Now.ToString("yyMMdd.HHmmss")+"_BRE.png")]</InArgument>
            </Assign.Value>
          </Assign>
        </Switch>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Make file path, append Failed" sap:VirtualizedContainerService.HintSize="262,72" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[io_strFilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Path.Combine(in_strFolder, "ExceptionScreenshot_"+Now.ToString("yyMMdd.HHmmss")+"_Init.png")]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Assign DisplayName="Create fileInfo with Path" sap:VirtualizedContainerService.HintSize="914,72" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="si:FileInfo">[screenshotFileInfo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="si:FileInfo">[new fileinfo(io_strFilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Not Directory.Exists(screenshotFileInfo.DirectoryName)]" DisplayName="If directory does not exist, create it" sap:VirtualizedContainerService.HintSize="914,369.3333333333333" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create directory" sap:VirtualizedContainerService.HintSize="334,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[screenshotFileInfo.DirectoryName]" />
      </If.Then>
    </If>
    <ui:SaveImage DisplayName="Save screenshot" FileName="[io_strFilePath]" sap:VirtualizedContainerService.HintSize="914,146" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[screenshot]" />
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="914,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_strLogMessage+&quot; &quot;+io_strFilePath]" />
  </Sequence>
</Activity>