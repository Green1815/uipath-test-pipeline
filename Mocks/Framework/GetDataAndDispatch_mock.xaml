<Activity mc:Ignorable="sap sap2010" x:Class="GetDataAndDispatch" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:utam="clr-namespace:UiPath.Testing.Activities.Mocks;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_intAddedItems" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_strInputDataFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_strInputDataRange" Type="InArgument(x:String)" />
    <x:Property Name="in_strInputDataSheetName" Type="InArgument(x:String)" />
    <x:Property Name="in_strOrchestratorQueueNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_isFilterUnique" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_strWbParentPath" Type="InArgument(x:String)" />
    <x:Property Name="in_strOrchestratorFolderName" Type="InArgument(x:String)" />
    <x:Property Name="in_strOrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_strOrchestratorTenantName" Type="InArgument(x:String)" />
  </x:Members>
  <this:GetDataAndDispatch.in_strOrchestratorQueueNumber>
    <InArgument x:TypeArguments="x:String" />
  </this:GetDataAndDispatch.in_strOrchestratorQueueNumber>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1760,2674</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>General_GetDataAndDispatch_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="104">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Testing.Activities.Mocks</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="116">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow allows for the dispatching of Queue items in the Init state of the Performer.&#xA;An Excel file is read and each row is dispatched to the Queue specific. &#xA;The reference for each Queue Item is defined in the Config." DisplayName="GetDataAndDispatch" sap:VirtualizedContainerService.HintSize="990,2609" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="dateWbStartTime" />
      <Variable x:TypeArguments="x:String" Name="strWbName" />
      <Variable x:TypeArguments="x:String" Name="strWbPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtTransactionData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="During block startup, information about the path are constructed. It will be passed to any child workblock.&#xA;You should also publish the input arguments that you want to make available in the log" DisplayName="wbStartup" sap:VirtualizedContainerService.HintSize="928,153" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:CurrentJobInfo" Name="jobWorkflow" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetCurrentJobInfo DisplayName="Get Current Job Info" sap:VirtualizedContainerService.HintSize="431,32" sap2010:WorkflowViewState.IdRef="GetCurrentJobInfo_1" Result="[jobWorkflow]" />
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,172" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strWbName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[jobWorkflow.WorkflowName]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[strWbPath]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[if (string.IsNullOrEmpty(in_strWbParentPath), strWbName, in_strWbParentPath+"|"+strWbName)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="s:DateTime">[dateWbStartTime]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbName&#xA;wbParentName&#xA;wbKey&#xA;wbPath&#xA;wbLevel&#xA;wbStartTime&#xA;wbState" DisplayName="Publish default wb fields" sap:VirtualizedContainerService.HintSize="431,164" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
        <ui:AddLogFields.Fields>
          <InArgument x:TypeArguments="x:String" x:Key="wbName">[strWbName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="wbParentName">[if(strWbPath.Count(Function(x) x="|") = 0, string.Empty, strWbPath.Split("|".ToCharArray)(strWbPath.Count(Function(x) x="|")-1))]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="wbKey">[Guid.NewGuid.ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="wbPath">[strWbPath]</InArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="wbLevel">[strWbPath.Count(Function(x) x="|")]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="wbState">Executing</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="wbStartTime">[dateWbStartTime.ToString("yyyyMMdd HH:mm:ss.fff")]</InArgument>
        </ui:AddLogFields.Fields>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AddLogFields>
      <ui:LogMessage DisplayName="Log execution ended message" sap:VirtualizedContainerService.HintSize="431,101" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[String.Format(&quot;{0} execution started.&quot;,strWbPath)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="928,2070" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="This activity currently uses a dummy Excel file in the Data folder of the project. A different file location can be implemented. &#xA;NB: when multiple workflows are needed to retrieve the input data, it is advised to use a separate Dispatcher. " DataTable="[dtTransactionData]" DisplayName="Read Range - InputData" sap:VirtualizedContainerService.HintSize="866,175" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="[in_strInputDataRange]" SheetName="[in_strInputDataSheetName]" WorkbookPath="[in_strInputDataFilePath]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <Sequence DisplayName="Add Rows as QueueItems" sap:VirtualizedContainerService.HintSize="866,1744" sap2010:WorkflowViewState.IdRef="Sequence_25">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="strQueueItemTemplate" />
          <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign - strQueueItemTemplate" sap:VirtualizedContainerService.HintSize="804,81" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strQueueItemTemplate]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["{{""itemData"": {{""Name"": ""{0}"",""Priority"": ""Normal"",""SpecificContent"": {1},""DeferDate"": null,""DueDate"": null,""Reference"": ""{2}""}}}}"]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTransactionData]" DisplayName="For Each Row - dtTransactionData" sap:VirtualizedContainerService.HintSize="804,1331" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence sap2010:Annotation.AnnotationText="Note: Due to variable scope settings, the variables 'isUniqueReference', 'strResponse' &amp; 'intResponseCode' are always set to defaults 'True', 'string.Empty' &amp; '-1' at the beginning of this sequence." DisplayName="Create JSON object from Data Row and add to Queue" sap:VirtualizedContainerService.HintSize="770,1145" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Default="True" Name="isUniqueItem" />
                  <Variable x:TypeArguments="x:String" Default="[string.Empty]" Name="strResponse" />
                  <Variable x:TypeArguments="x:Int32" Default="-1" Name="intResponseCode" />
                  <Variable x:TypeArguments="x:String" Name="strReference" />
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="dictDynamicData" />
                  <Variable x:TypeArguments="x:String" Name="strPayload" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign sap2010:Annotation.AnnotationText="If reference &gt; 128 chars (max reference), take substring.&#xA;&#xA;Replace / and \ in the reference since these error the payload &#xA;&#xA;Reinitialize dictDynamicData" DisplayName="Multiple Assign - Queue reference data" sap:VirtualizedContainerService.HintSize="728,265" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[strReference]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[row("Name").ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[strReference]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[Regex.Replace(If(strReference.Length &gt; 128, strReference.Substring(strReference.Length-128, 128), strReference), "[\\//]", "")]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[dictDynamicData]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MultipleAssign>
                <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For each column of TransactionData" sap:VirtualizedContainerService.HintSize="728,267" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dtTransactionData.Columns]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sd:DataColumn">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="column" />
                      </ActivityAction.Argument>
                      <Assign DisplayName="Assign - Add column in Dictionary" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[dictDynamicData(column.ColumnName)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[row(column)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <Assign DisplayName="Assign - strPayload" sap:VirtualizedContainerService.HintSize="728,85" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strPayload]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[String.Format(strQueueItemTemplate, _ 
in_strOrchestratorQueueName, _
Newtonsoft.Json.JsonConvert.SerializeObject(dictDynamicData), _
strReference _
)]</InArgument>
                  </Assign.Value>
                </Assign>
                <utam:MockActivity DisplayName="Mock If - in_FilterUnique is True" sap:VirtualizedContainerService.HintSize="728,228" sap2010:WorkflowViewState.IdRef="MockActivity_1" MockedActivityIdRef="If_8">
                  <utam:MockActivity.MockedActivity>
                    <If sap2010:Annotation.AnnotationText="If you want to filter out duplicate items for every status (New, Successful, Failed) set the option Unique Reference in Orchestrator when adding a Queue." Condition="[in_isFilterUnique = True]" DisplayName="If - in_FilterUnique is True" sap:VirtualizedContainerService.HintSize="200,154" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,841" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="strJSONResponse" />
                            <Variable x:TypeArguments="njl:JObject" Name="objPayload" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:OrchestratorHttpRequest ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request - New Queue Items" FolderPath="[in_strOrchestratorFolderName]" sap:VirtualizedContainerService.HintSize="434,242" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_4" JSONPayload="[&quot;{X-UIPATH-TenantName: '&quot;+in_strOrchestratorTenantName+&quot;' }&quot;]" Method="GET" RelativeEndpoint="[&quot;/odata/QueueItems?$filter=(QueueDefinitionId eq &quot;+in_strOrchestratorQueueNumber+&quot; and Status eq 'New')&quot;]" Result="[strJSONResponse]" StatusCode="[intStatusCode]" />
                          <Assign sap2010:Annotation.AnnotationText="Use assign instead of WebAPI Deserialize activity to prevent dependency conflicts" DisplayName="Assign - Deserialize JSON New Items" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="njl:JObject">[objPayload]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="njl:JObject">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of JObject)(strJSONResponse)]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <Assign sap2010:Annotation.AnnotationText="Check if there are any rows based on reference. If not then the item is Unique" DisplayName="[LINQ] Assign isUnique" sap:VirtualizedContainerService.HintSize="434,127" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isUniqueItem]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[(From x In objPayload("value")
Where x("Reference").ToString.Equals(strReference)).Count = 0]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[String.Format(&quot;{0} unique reference is {1}&quot;,strReference,isUniqueItem)]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_26" />
                      </If.Else>
                    </If>
                  </utam:MockActivity.MockedActivity>
                  <Sequence sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </utam:MockActivity>
                <If Condition="[isUniqueItem = True]" DisplayName="If - Reference is unique on status New in queue" sap:VirtualizedContainerService.HintSize="728,52" sap2010:WorkflowViewState.IdRef="If_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="785,1007" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:OrchestratorHttpRequest ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Orchestrator HTTP Request - Add Queue Item" FolderPath="[in_strOrchestratorFolderName]" sap:VirtualizedContainerService.HintSize="743,242" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_5" JSONPayload="[strPayload]" Method="POST" RelativeEndpoint="/odata/Queues/UiPathODataSvc.AddQueueItem" Result="[strResponse]" StatusCode="[intResponseCode]" />
                      <Flowchart DisplayName="Orchestrator response Code" sap:VirtualizedContainerService.HintSize="743,637" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <av:Point x:Key="ShapeLocation">320,32.5</av:Point>
                            <av:Size x:Key="ShapeSize">60,75</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">350,107.166666666667 350,157.166666666667</av:PointCollection>
                            <x:Double x:Key="Width">708.9999999999997</x:Double>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Flowchart.StartNode>
                          <x:Reference>__ReferenceID3</x:Reference>
                        </Flowchart.StartNode>
                        <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID3" DisplayName="Orchestrator Response Code" Expression="[intResponseCode]" sap:VirtualizedContainerService.HintSize="156,87" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_2">
                          <FlowSwitch.Default>
                            <FlowStep x:Name="__ReferenceID2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">500,316.04</av:Point>
                                  <av:Size x:Key="ShapeSize">200,207</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence sap2010:Annotation.AnnotationText="All other response codes, which likely indicate that the prescribed item has Not been added to the queue, or the item has not been added due to duplicate rule based on New status." DisplayName="Other response" sap:VirtualizedContainerService.HintSize="200,198" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[intResponseCode &gt; 0]" DisplayName="If - The item has been tried to add to the queue" sap:VirtualizedContainerService.HintSize="714,258.6666666666667" sap2010:WorkflowViewState.IdRef="If_9">
                                  <If.Then>
                                    <ui:LogMessage DisplayName="Log Message - Response" sap:VirtualizedContainerService.HintSize="334,94.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[&quot;⚠ Orchestrator responded with code '&quot;+intResponseCode.ToString+&quot;' for item '&quot;+strReference+&quot;' and status message: &quot;+strResponse]" />
                                  </If.Then>
                                  <If.Else>
                                    <ui:LogMessage DisplayName="Log Message - Not Added" sap:VirtualizedContainerService.HintSize="334,94.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;⚠ Item with reference '&quot;+strReference+&quot;' was not added. A duplicate with status New has been found in the same queue.&quot;]" />
                                  </If.Else>
                                </If>
                              </Sequence>
                            </FlowStep>
                          </FlowSwitch.Default>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">271.333333333333,157.166666666667</av:Point>
                              <av:Size x:Key="ShapeSize">157,87</av:Size>
                              <av:PointCollection x:Key="201Connector">271.333333333333,200.5 110,200.5 110,315.333333333333</av:PointCollection>
                              <av:PointCollection x:Key="409Connector">349.333333333333,244.166666666667 349.333333333333,274.166666666667 350,274.166666666667 350,313.833333333333</av:PointCollection>
                              <av:PointCollection x:Key="Default">427.333333333333,200.666666666667 600,200.666666666667 600,316.04</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowStep x:Key="201" x:Name="__ReferenceID0">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">10,315.333333333333</av:Point>
                                <av:Size x:Key="ShapeSize">200,127</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="The item has successfully been added." DisplayName="Successfully added" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message - Added to Queue" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[String.Format(&quot;✔ Added '{0}' to the queue.&quot;,strReference)]" />
                              <Assign DisplayName="Assign - Lower number of added items" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[out_intAddedItems]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[out_intAddedItems+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </FlowStep>
                          <FlowStep x:Key="409" x:Name="__ReferenceID1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">250,313.833333333333</av:Point>
                                <av:Size x:Key="ShapeSize">200,175</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="Queue settings require unique reference for the transaction item. Only deleted items are excluded from this requirement." DisplayName="Duplicate error" sap:VirtualizedContainerService.HintSize="200,168" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message - Duplicate" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Warn" Message="[&quot;⛔ Orchestrator queue settings prevented adding &quot;+strReference+&quot; since a duplicate was found.&quot;]" />
                            </Sequence>
                          </FlowStep>
                        </FlowSwitch>
                        <x:Reference>__ReferenceID0</x:Reference>
                        <x:Reference>__ReferenceID1</x:Reference>
                        <x:Reference>__ReferenceID2</x:Reference>
                      </Flowchart>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_27" />
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
        <ui:LogMessage DisplayName="Log Message - Dispatch Complete" sap:VirtualizedContainerService.HintSize="804,141" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[String.Format(&quot;Dispatching of data complete. {0} items added to queue {1}&quot;,out_intAddedItems,in_strOrchestratorQueueName)]" />
      </Sequence>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Successful logging for workblock. &#xA;You should also publish the output arguments that you want to make available in the log." DisplayName="wb Logging Successful" sap:VirtualizedContainerService.HintSize="928,138" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbStatus&#xA;wbState&#xA;wbDurationSec" DisplayName="Publish default wb fields" sap:VirtualizedContainerService.HintSize="338,178" sap2010:WorkflowViewState.IdRef="AddLogFields_3">
        <ui:AddLogFields.Fields>
          <InArgument x:TypeArguments="x:String" x:Key="wbStatus">Successful</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="wbState">Ended</InArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="wbDurationSec">[convert.ToDouble(now.Subtract(dateWbStartTime).TotalSeconds)]</InArgument>
        </ui:AddLogFields.Fields>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AddLogFields>
      <ui:LogMessage DisplayName="Log execution ended message" sap:VirtualizedContainerService.HintSize="338,104.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[strWbPath + &quot; execution ended with success.&quot;]" />
    </Sequence>
  </Sequence>
</Activity>